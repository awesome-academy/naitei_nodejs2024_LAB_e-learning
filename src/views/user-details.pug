extends layout 

block content
  include partial/navbar
  include partial/header
  .container-xxl.py-2.mt-4
    .container
      .row.g-4.wow.fadeInUp(data-wow-delay='0.5s')
        .profile-page
          .content
            .custom-content
              img.py-5(src=user.avatar alt='User Avatar' class='user-avatar')
              table.user-table
                tbody
                  tr
                    td.label #{t('admin-user.name')}
                    td.value #{user.name}
                  tr
                    td.label #{t('admin-user.email')}
                    td.value #{user.email}
                  tr
                    td.label #{t('admin-user.phone_number')}
                    td.value #{user.phone_number}
                  tr
                    td.label #{t('admin-user.gender')}
                    td.value #{user.gender}
                  tr
                    td.label #{t('admin-user.date_of_birth')}
                    td.value #{user.date_of_birth}
                  tr
                    td.label #{t('admin-user.address')}
                    td.value #{user.address}
                  tr
                    td.label #{t('admin-user.identity_card')}
                    td.value #{user.identity_card}
                  tr
                    td.label #{t('admin-user.additional_info')}
                    td.value #{user.additional_info}

                  if user.role === 'professor'
                    tr
                      td.label #{t('admin-user.department')}
                      td.value #{user.department}
                    tr
                      td.label #{t('admin-user.years_of_experience')}
                      td.value #{user.years_of_experience}

              .edit-btn.mt-3
                button( onclick="showResetPasswordPopup()") #{t('admin-user.reset_password')}
              .edit-btn.mt-3.mb-3
                button(onclick=`showUpdateForm('${user.id}', '${user.name}', '${user.phone_number}', '${user.date_of_birth}', '${user.gender}', '${user.address}', '${user.identity_card}', '${user.additional_info}', '${user.department}', '${user.years_of_experience}')`) #{t('admin.edit')}
          .tab-content
            ul.nav.nav-tabs
              li.nav-item
                a.nav-link(href="#professor-courses" data-bs-toggle="tab") #{t('professor.course')} 
              if user.role !== 'professor'
                li.nav-item
                  a.nav-link(href="#purchased-courses" data-bs-toggle="tab") #{t('admin-user.purchased_course')}
                li.nav-item
                  a.nav-link(href="#in-progress-courses" data-bs-toggle="tab") #{t('admin-user.in_progress_course')}

            if user.role === 'professor'
              .tab-pane.fade.show.active#professor-courses
                .container
                  .row.g-4.py-2
                    each courseDetails in professorCourses 
                      .col-lg-6.col-md-6.wow.fadeInUp(data-wow-delay='0.1s')
                        .course-item.shadow
                          .position-relative.overflow-hidden.text-light.image
                            img.img-fluid(src='img/course-1.jpg' alt=courseDetails.course.status)
                            .status-overlay
                              | #{courseDetails.course.status}
                          .p-2.pb-0.custom-course-name
                            h5.mb-1
                              a.text-dark(href=`/courses/${courseDetails.course.id}`) #{courseDetails.course.name}
                            .d-flex
                              small.flex-fill.py-1.px-2
                                i.fa.fa-star.text-warning.me-2
                                | #{courseDetails.course.average_rating}
                              small.flex-fill.text-left.p-2
                                i.fa.fa-clock.me-2
                                | #{courseDetails.totalHours} #{t('home.Hrs')}
                              small.text-primary.py-1.px-2.fw-bold.fs-6
                                a(href=`/enrollments/${courseDetails.course.id}`)
                                  | #{t('home.enroll')}  
                                  i.fa.fa-chevron-right.me-2.fs-10
                    else
                      p.text-center #{t('home.no_course_available')}

            else
              .tab-pane.fade.show.active#purchased-courses    
                .container
                  .row.g-4.py-2
                    each courseDetails in coursesWithDetails
                      .col-lg-6.col-md-6.wow.fadeInUp(data-wow-delay='0.1s')
                        .course-item.shadow
                          .position-relative.overflow-hidden.text-light.image
                            img.img-fluid(src='img/course-1.jpg' alt=courseDetails.course.name)
                          .p-2.pb-0.custom-course-name
                            h5.mb-1
                              a.text-dark(href=`/courses/${courseDetails.course.id}`) #{courseDetails.course.name}
                          .d-flex
                            small.flex-fill.py-1.px-2
                              i.fa.fa-star.text-warning.me-2
                              | #{courseDetails.course.average_rating}
                            small.flex-fill.text-left.p-2
                              i.fa.fa-clock.me-2
                              | #{courseDetails.totalHours} #{t('home.Hrs')}
                            small.text-primary.py-1.px-2.fw-bold.fs-6
                              if isLoggedIn
                                a(href=`/enrollments/${courseDetails.course.id}`)
                                  | #{t('home.enroll')}  
                                  i.fa.fa-chevron-right.me-2.fs-10
                    else
                      p.text-center #{t('home.no_course_available')}

              .tab-pane.fade#in-progress-courses
                .container
                  .row.g-4.py-2
                    each courseDetails in courseDetailsList
                      .col-lg-6.col-md-6.wow.fadeInUp(data-wow-delay='0.1s')
                        .course-item.shadow
                          .position-relative.overflow-hidden.text-light.image
                            img.img-fluid(src='img/course-1.jpg' alt=courseDetails.course.name)
                          .p-2.pb-0.custom-course-name
                            h5.mb-1
                              a.text-dark(href=`/courses/${courseDetails.course.id}`) #{courseDetails.course.name}
                          .d-flex
                            small.flex-fill.py-1.px-2
                              .list2.d-flex.justify-content-between.pt-2.border-bottom.me-2
                                p
                                  i.fa.fa-book
                                  |  #{t('course.lectures')}
                                p #{courseDetails.totalLessons}
                            small.flex-fill.text-left.p-2
                              .list6.d-flex.justify-content-between.pt-2.border-bottom.me-2
                                p
                                  i.fa.fa-list
                                  |  #{t('course.progress')}
                                  | #{courseDetails.enrollment.progress}%
                            small.text-primary.py-1.px-2.fw-bold.fs-6
                              if isLoggedIn
                                a(href=`/enrollments/${courseDetails.course.id}`)
                                  | #{t('home.Enroll')}  
                                  i.fa.fa-chevron-right.me-2.fs-10
                    else
                      p.text-center #{t('home.no_course_available')}
  #editModal.hidden
    .modal-content-admin  
      h3 #{t('admin-user.updateInfo')}
      form(action="/account/edit" method="POST" id="update-form")
        input(type="hidden" name="id" id="update-id" value=user.id)
        .form-group
          label(for="name") #{t('admin-user.name')}
          input(type="text" name="name" id="update-name" value=user.name required class=(errors && errors.name ? 'is-invalid' : ''))
          if errors && errors.name
            .error-message.text-danger #{errors.name}
        .form-group
          label(for="phone_number") #{t('admin-user.phone_number')}
          input(type="text" name="phone_number" id="update-phone_number" value=user.phone_number required class=(errors && errors.phone_number ? 'is-invalid' : ''))
          if errors && errors.phone_number
            .error-message.text-danger #{errors.phone_number}
        .form-group
          label(for="date_of_birth") #{t('admin-user.date_of_birth')}
          input(type="date" name="date_of_birth" id="update-date_of_birth" value=user.date_of_birth class=(errors && errors.date_of_birth ? 'is-invalid' : ''))
          if errors && errors.date_of_birth
            .error-message.text-danger #{errors.date_of_birth}
        .form-group
          label(for="gender") #{t('admin-user.gender')}
          select(name="gender" id="update-gender" required class=(errors && errors.gender ? 'is-invalid' : ''))
            option(value="male" selected=user.gender == 'male') #{t('admin-user.male')}
            option(value="female" selected=user.gender == 'female') #{t('admin-user.female')}
          if errors && errors.gender
            .error-message.text-danger #{errors.gender}
        .form-group
          label(for="address") #{t('admin-user.address')}
          input(type="text" name="address" id="update-address" value=user.address class=(errors && errors.address ? 'is-invalid' : ''))
          if errors && errors.address
            .error-message.text-danger #{errors.address}
        .form-group
          label(for="identity_card") #{t('admin-user.identity_card')}
          input(type="text" name="identity_card" id="update-identity_card" value=user.identity_card class=(errors && errors.identity_card ? 'is-invalid' : ''))
          if errors && errors.identity_card
            .error-message.text-danger #{errors.identity_card}
        .form-group
          label(for="additional_info") #{t('admin-user.additional_info')}
          input(type="text" name="additional_info" id="update-additional_info" value=user.additional_info class=(errors && errors.additional_info ? 'is-invalid' : ''))
          if errors && errors.additional_info
            .error-message.text-danger #{errors.additional_info}
        .btn-group-admin
          .save-btn: button(type="submit") #{t('admin.save')}
          .cancel-btn: button(type="button" onclick="hideUpdateForm()") #{t('admin.cancel')}

    #resetPasswordModal.hidden
      .modal-content-admin  
        h3 #{t('admin-user.reset_password')}
        form(action="/account/reset-password" method="POST" id="reset-password-form")
          input(type="hidden" name="userId" value=user.id)
          .form-group
            label(for="currentPassword")  #{t('admin-user.current_password')}
            input(type="password" name="currentPassword" required)
          .form-group
            label(for="newPassword") #{t('admin-user.new_password')}
            input(type="password" name="newPassword" required)
          .form-group
            label(for="confirmPassword") #{t('admin-user.confirm_password')}
            input(type="password" name="confirmPassword" required)
          .btn-group-admin
            .save-btn: button(type="submit") #{t('admin.save')}
            .cancel-btn: button(type="button" onclick="hideResetPasswordPopup()") #{t('admin.cancel')}
